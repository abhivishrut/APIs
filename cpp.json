[
    {
        "id": "1",
        "name": "Introduction",
        "message": "ðŸ”´ C++ programming ek popular programming language hai jo object-oriented programming ke concepts ke through program design karna allow karta hai. C++ programming ko 1985 me Bjarne Stroustrup ne develop kiya tha, jo C programming ki ek upgrade hai.\n\nC++ programming mein hum object-oriented programming ke 4 basic principles ko follow karte hai: encapsulation, inheritance, polymorphism, and abstraction.\n\nðŸ“Œ~1. Encapsulation: Iski madad se hum data aur functions ko ek sath package kar sakte hai aur iska use ek object ke through kar sakte hai.\n\nðŸ“Œ~2. Inheritance: Iski madad se hum ek class ke features ko doosre class me inherit kar sakte hai, jisse code ka reuse ho jaata hai.\n\nðŸ“Œ~3. Polymorphism: Iski madad se hum ek function ko doosre function ke roop me use kar sakte hai.\n\nðŸ“Œ~4. Abstraction: Iski madad se hum data aur functions ko abstract kar sakte hai, jisse code ka complexity kam hota hai.\n\nðŸ”´ C++ programming mein hum classes, objects, functions, loops, conditionals, pointers, arrays, strings, etc. ka use kar sakte hai. Iske alawa, C++ mein hum exception handling, templates, namespaces, STL (Standard Template Library), etc. ka use bhi kar sakte hai.\n\nðŸ”´ C++ programming ko maine jo bataaya tha, uske alawa bahut sare features hai jo aap C++ programming ko override karne ke liye use kar sakte hai. C++ programming ko commercial software development, game development, embedded systems, etc. me use kiya jata hai.\n\n",
        "example": "0",
        "remcont": "0"
    },
    {
        "id": "2",
        "name": "Installation",
        "message": "",
        "example": "",
        "remcont": ""
    },
    {
        "id": "3",
        "name": "Syntax",
        "message": "",
        "example": "",
        "remcont": ""
    },
    {
        "id": "4",
        "name": "Run First Program",
        "message": "",
        "example": "",
        "remcont": ""
    },
    {
        "id": "5",
        "name": "Comments in C++",
        "message": "",
        "example": "",
        "remcont": ""
    },
    {
        "id": "6",
        "name": "Variables",
        "message": ""
    },
    {
        "id": "7",
        "name": "Constant Variables",
        "message": "",
        "example": "",
        "remcont": ""
    },
    {
        "id": "8",
        "name": "Data Types",
        "message": "",
        "example": "",
        "remcont": ""
    },
    {
        "id": "9",
        "name": "Operators",
        "message": "",
        "example": "",
        "remcont": ""
    },
    {
        "id": "10",
        "name": "String",
        "message": "",
        "example": "",
        "remcont": ""
    },
    {
        "id": "11",
        "name": "User Input",
        "message": "",
        "example": "",
        "remcont": ""
    },
    {
        "id": "12",
        "name": "if else",
        "message": "",
        "example": "",
        "remcont": ""
    },
    {
        "id": "13",
        "name": "while Loop",
        "message": "",
        "example": "",
        "remcont": ""
    },
    {
        "id": "14",
        "name": "do while Loop",
        "message": "",
        "example": "",
        "remcont": ""
    },
    {
        "id": "15",
        "name": "for Loop",
        "message": "",
        "example": "",
        "remcont": ""
    },
    {
        "id": "16",
        "name": "continue Statement",
        "message": "",
        "example": "",
        "remcont": ""
    },
    {
        "id": "17",
        "name": "break Statement",
        "message": "",
        "example": "",
        "remcont": ""
    },
    {
        "id": "18",
        "name": "switch Loop",
        "message": "",
        "example": "",
        "remcont": ""
    },
    {
        "id": "19",
        "name": "Exception Handling",
        "message": "",
        "example": "",
        "remcont": ""
    },
    {
        "id": "20",
        "name": "try catch",
        "message": "",
        "example": "",
        "remcont": ""
    },
    {
        "id": "21",
        "name": "goto statement",
        "message": "",
        "example": "",
        "remcont": ""
    },
    {
        "id": "22",
        "name": "Array in c++",
        "message": ""
    },
    {
        "id": "23",
        "name": "Array Traversing",
        "message": "",
        "example": "",
        "remcont": ""
    },
    {
        "id": "24",
        "name": "Multidimensional Array",
        "message": "",
        "example": "",
        "remcont": ""
    },
    {
        "id": "25",
        "name": "Structure in c++",
        "message": "",
        "example": "",
        "remcont": ""
    },
    {
        "id": "26",
        "name": "Reference Variable",
        "message": "",
        "example": "",
        "remcont": ""
    },
    {
        "id": "27",
        "name": "Pointers in c++",
        "message": "",
        "example": "",
        "remcont": ""
    },
    {
        "id": "28",
        "name": "Function in c++",
        "message": "",
        "example": "",
        "remcont": ""
    },
    {
        "id": "29",
        "name": "Parameterized Function",
        "message": "",
        "example": "",
        "remcont": ""
    },
    {
        "id": "30",
        "name": "Recursive Function",
        "message": "",
        "example": "",
        "remcont": ""
    },
    {
        "id": "31",
        "name": "Function Call By Value And Call By Reference",
        "message": "",
        "example": "",
        "remcont": ""
    },
    {
        "id": "32",
        "name": "OOPs Concepts Introduction",
        "message": "",
        "example": "",
        "remcont": ""
    },
    {
        "id": "33",
        "name": "Class And Object",
        "message": "",
        "example": "",
        "remcont": ""
    },
    {
        "id": "34",
        "name": "Static Members",
        "message": "",
        "example": "",
        "remcont": ""
    },
    {
        "id": "35",
        "name": "Non-Static Members",
        "message": "",
        "example": "",
        "remcont": ""
    },
    {
        "id": "36",
        "name": "Constructor And Destructor",
        "message": "",
        "example": "",
        "remcont": ""
    },
    {
        "id": "37",
        "name": "Access Specifiers",
        "message": "",
        "example": "",
        "remcont": ""
    },
    {
        "id": "38",
        "name": "Encapsulation",
        "message": "",
        "example": "",
        "remcont": ""
    },
    {
        "id": "39",
        "name": "Inheritance",
        "message": "",
        "example": "",
        "remcont": ""
    },
    {
        "id": "40",
        "name": "Multilevel Inheritance",
        "message": "",
        "example": "",
        "remcont": ""
    },
    {
        "id": "41",
        "name": "Multiple Inheritance",
        "message": "",
        "example": "",
        "remcont": ""
    },
    {
        "id": "42",
        "name": "Method Overloading",
        "message": "",
        "example": "",
        "remcont": ""
    },
    {
        "id": "43",
        "name": "Method Overriding",
        "message": "",
        "example": "",
        "remcont": ""
    },
    {
        "id": "44",
        "name": "Polymorphism",
        "message": "",
        "example": "",
        "remcont": ""
    },
    {
        "id": "45",
        "name": "Friend Function",
        "message": "",
        "example": "",
        "remcont": ""
    },
    {
        "id": "46",
        "name": "Virtual Function",
        "message": "",
        "example": "",
        "remcont": ""
    },
    {
        "id": "47",
        "name": "Virtual Destructor",
        "message": "",
        "example": "",
        "remcont": ""
    }
]

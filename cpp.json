[
    {
        "id": "1",
        "name": "Introduction",
        "message": "📌 C++ programming ek high-level programming language hai jo C programming se bani hui hai. C++ programming ko oriented object programming language kehte hai, isliye C++ programming mein classes, objects, inheritance, polymorphism, encapsulation, abstraction concepts aate hai. C++ programming ko primarily system programming aur application development ke liye use kiya jata hai.\n\n📌 C++ programming ke some important features:\n\n📍 1: C++ programming mein oriented object programming concepts aate hai.\n\n📍 2: C++ programming mein functions aur variables ke scope ko local aur global mein divide kiya jata hai.\n\n📍 3: C++ programming mein functions aur variables ko function overloading aur operator overloading ke through define kiya jata hai.\n\n📍 4: C++ programming mein exception handling ka use kiya jata hai.\n\n📍 5: C++ programming mein templates ka use kiya jata hai.\n\n📍 6: C++ programming mein STL (Standard Template Library) ka use kiya jata hai.\n\n📌 C++ programming ke use se aapko code ko modular aur organized banane mein help karta hai aur code ka reuse bhi ho jata hai. Agar aap ek class ka use repeat karne ki jarurat hai, to aap usko ek baar define karke, repeatedly use kar sakte hai. C++ programming mein, classes aur objects ke use se aapko code ko reuse karne mein help milti hai aur code ko modular aur organized banane mein bhi help milti hai.\n\n📌 C++ programming ke use se aapko C++ programming mein code likhne ka aur debug karne ka maza aata hai. C++ programming ke use se aapko system programming aur application development ke liye help milta hai.\n\n"
    },
    {
        "id": "2",
        "name": "Installation",
        "message": "📌 C++ programming ko Windows mein install karne ke liye, aapko ek compiler install karna hoga jo C++ programming code ko execute kar sakta hai. Ek compiler C++ programming ko machine code mein translate karta hai aur machine code ko execute karne ke liye operating system ko use karta hai.\n\n📌 Ek popular C++ programming compiler Microsoft Visual Studio hai. Isse Windows mein C++ programming ko install kar sakte hai.\n\n📌 Microsoft Visual Studio ko install karne ke liye, aapko Microsoft Visual Studio ke website par ja kar, 'Download' button par click karke, 'Free download' option ko select karke, download kar sakte hai.\n\n📌 Download karne ke baad, installer ko chalane ke baad, installation process shuru hoga. Installation process mein, aapko ek screen dikhai dega jisme, 'Workloads' tab ko select karna hoga aur 'Desktop development with C++' workload ko select karke, 'Install' button par click kar sakte hai.\n\n📌 Installation process ke baad, Microsoft Visual Studio ko open karke, 'New Project' option ko select kar sakte hai aur, 'Win32 Console Application' project template ko select karke, 'Next' button par click kar sakte hai. Ab aapko ek screen dikhai dega jisme, 'Project name' aur 'Location' ko enter kar sakte hai aur, 'Create' button par click karke, project ko create kar sakte hai.\n\n📌 Microsoft Visual Studio ke through, aap C++ programming code ko write, compile aur run kar sakte hai.\n\n📌 Note: Ek doosra popular C++ programming compiler MinGW hai. Isse Windows mein C++ programming ko install kar sakte hai. MinGW ko install karne ke liye, aapko MinGW ki website par ja kar, 'Download' button par click karke, 'Automated Installer ko download kar sakte hai. Download karne ke baad, installer ko chalane ke baad, installation process shuru hoga. Installation process mein, aapko ek screen dikhai dega jisme, 'Select Components' tab ko select karna hoga aur, 'mingw-developer-toolkit' ko select karke, 'Next' button par click kar sakte hai. Installation process ke baad, MinGW ke through, C++ programming code ko write, compile aur run kar sakte hai.\n\n"
    },
    {
        "id": "3",
        "name": "Syntax",
        "message": "📌 C++ programming mein, syntax ek set of rules hai jo aapko C++ programming code likhne ke liye follow karna hoga. C++ programming mein, syntax ke rules define karte hai ki kaise variable declare karte hai, kaise functions define aur call karte hai aur kaise control structures use karte hai.\n\n📌 C++ programming mein, syntax ko follow karne se aapko code likhne mein help milta hai aur code ka execution time aur memory ka use kam hota hai.\n\n📌 C++ programming mein, syntax ke kuch important rules hai:\n\n📍 1: C++ programming mein, code ko semicolon (;) ke saath end karne chahiye.\n\nExample:\n\nint a;   // Correct\nint a; // Incorrect\n\n📍 2: C++ programming mein, functions ka return type define karne chahiye.\n\nExample:\n\nint add(int a, int b) { // Correct\n    return a + b;\n}\nvoid add(int a, int b) { // Incorrect\n    return a + b;\n\n📍 3: C++ programming mein, variables ko declare karne se pehle, data types define karne chahiye.\n\nExample:\n\nint a; // Correct\na = 10;\n\nint; // Incorrect\na = 10;\n\n📍 4: C++ programming mein, comments ko double slash (//) ya /* */ ke saath shuru karte hai aur end karte hai.\n\nExample:\n\n// This is a single line comment\n/* This is a\nmulti-line comment */\n\n📍 5: C++ programming mein, string literal ko double quotes ke saath define karte hai.\n\nExample: string str = 'Hello World'; // Correct\nstring str = 'Hello World'; // Incorrect\n\n📍 6: C++ programming mein, keywords ko reserve karte hai.\n\nExample:\n\nint main() { // Correct\n    return 0;\n}\n\nint Main() { // Incorrect\n    return 0;\n}\n\n📍 7: C++ programming mein, operators ke use se aapko variables aur expressions ko manipulate karne mein help milta hai.\n\nExample:\n\nint a = 10;\nint b = 20;\nint c = a + b; // Correct\nint c = a +; // Incorrect\n\n📍 8: C++ programming mein, loops aur conditionals ke use se aapko code ko control karne mein help milta hai.\n\nExample:\n\nint a = 10;\nif (a > 5) { // Correct\n    cout << \"a is greater than 5\";\n}\n\nint a = 10;\nif (a > 5) { // Incorrect\n    cout << \"a is greater than 5\";\n    cout << \"a is greater than 5\";\n}\n\n📍 9: C++ programming mein, functions ke use se aapko code ko modular aur organized banane mein help karta hai.\n\nint add(int a, int b) { // Correct\n    return a + b;\n}\n\nint main() {\n    int a = 10;\n    int b = 20;\n    int c = add(a, b);\n    return 0;\n}\n\nint add(int a, int b) { // Incorrect\n    return a + b;\n}\n\nint main() {\n    int a = 10;\n    int b = 20;\n    int c = a + b;\n    return 0;\n}\n\n📌 C++ programming mein, syntax ke rules follow karne se aapko code likhne ka aur debug karne ka maza aata hai.\n\n"
    },
    {
        "id": "4",
        "name": "Run First Program",
        "message": "First C++ Program Example:\n\n#include <iostream>\n\nint main() {\n    std::cout << \"Hello World!\";\n    return 0;\n}\n\n📌 C++ programming mein, aapko pehle program run karne ke liye, ek compiler install karna hoga jo C++ programming code ko execute kar sakta hai. Ek compiler Microsoft Visual Studio hai. Isse Windows mein C++ programming ko run kar sakte hai.\n\n📌 Microsoft Visual Studio ko install karne ke liye, aapko Microsoft Visual Studio ke website par ja kar, 'Download' button par click karke, 'Free download'  option ko select karke, download kar sakte hai.\n\n📌 Download karne ke baad, installer ko chalane ke baad, installation process shuru hoga. Installation process mein, aapko ek screen dikhai dega jisme, 'Workloads' tab ko select karna hoga.\n\n📌 Workloads tab mein, 'Desktop development with C++' option ko select karke, 'Install' button par click karke, installation process shuru hoga.\n\n📌 Installation process ke baad, aapko Microsoft Visual Studio ke 'New Project' option par ja karke, 'Console App' option ko select karke, 'Create' button par click karke, aapko pehle program run karne ke liye code likhne ke liye hai.\n\n📌 Aapko pehle program run karne ke liye, aapko ek 'main' function likhna hoga. Main function, C++ programming mein code ko run karne ke liye use hota hai. Main function ko define karne ke liye, aapko 'int main()' likh sakte hai.\n\n📌 Main function mein, aapko 'cout' ke saath output print karne ke liye use karenge. 'cout' ko 'include' statement mein include karne hogi.\n\n📌 Main function mein, aapko 'return 0;' statement likh sakte hai. 'return 0;' statement, program ko successful execution hone ke liye '0' return karne ke liye use hota hai.\n\n📌 Aapko pehle program run karne ke liye, aapko 'int main()' function mein 'cout' ke saath output print karne ke baad, 'return 0;' statement likh karke, program ko run kar sakte hai.\n\n📌 Aapko pehle program run karne ke liye, aapko 'Run' button par click karke, program ko run kar sakte hai. Program ko run karne ke baad, aapko 'Hello World!' output ko dekh sakte hai.\n\n📌 C++ programming mein, syntax ke rules follow karne se aapko code likhne mein help milta hai aur code ka execution time aur memory ka use kam hota hai. Syntax ke rules follow karne se aapko code ka quality improve hota hai aur code ko maintain aur debug karne mein help karta hai."
    },
    {
        "id": "5",
        "name": "Comments in C++",
        "message": ""
    },
    {
        "id": "6",
        "name": "Variables",
        "message": ""
    },
    {
        "id": "7",
        "name": "Constant Variables",
        "message": ""
    },
    {
        "id": "8",
        "name": "Data Types",
        "message": ""
    },
    {
        "id": "9",
        "name": "Operators",
        "message": ""
    },
    {
        "id": "10",
        "name": "String",
        "message": ""
    },
    {
        "id": "11",
        "name": "User Input",
        "message": ""
    },
    {
        "id": "12",
        "name": "if else",
        "message": ""
    },
    {
        "id": "13",
        "name": "while Loop",
        "message": ""
    },
    {
        "id": "14",
        "name": "do while Loop",
        "message": ""
    },
    {
        "id": "15",
        "name": "for Loop",
        "message": ""
    },
    {
        "id": "16",
        "name": "continue Statement",
        "message": ""
    },
    {
        "id": "17",
        "name": "break Statement",
        "message": ""
    },
    {
        "id": "18",
        "name": "switch Loop",
        "message": ""
    },
    {
        "id": "19",
        "name": "Exception Handling",
        "message": ""
    },
    {
        "id": "20",
        "name": "try catch",
        "message": ""
    },
    {
        "id": "21",
        "name": "goto statement",
        "message": ""
    },
    {
        "id": "22",
        "name": "Array in c++",
        "message": ""
    },
    {
        "id": "23",
        "name": "Array Traversing",
        "message": ""
    },
    {
        "id": "24",
        "name": "Multidimensional Array",
        "message": ""
    },
    {
        "id": "25",
        "name": "Structure in c++",
        "message": ""
    },
    {
        "id": "26",
        "name": "Reference Variable",
        "message": ""
    },
    {
        "id": "27",
        "name": "Pointers in c++",
        "message": ""
    },
    {
        "id": "28",
        "name": "Function in c++",
        "message": ""
    },
    {
        "id": "29",
        "name": "Parameterized Function",
        "message": ""
    },
    {
        "id": "30",
        "name": "Recursive Function",
        "message": ""
    },
    {
        "id": "31",
        "name": "Function Call By Value And Call By Reference",
        "message": ""
    },
    {
        "id": "32",
        "name": "OOPs Concepts Introduction",
        "message": ""
    },
    {
        "id": "33",
        "name": "Class And Object",
        "message": ""
    },
    {
        "id": "34",
        "name": "Static Members",
        "message": ""
    },
    {
        "id": "35",
        "name": "Non-Static Members",
        "message": ""
    },
    {
        "id": "36",
        "name": "Constructor And Destructor",
        "message": ""
    },
    {
        "id": "37",
        "name": "Access Specifiers",
        "message": ""
    },
    {
        "id": "38",
        "name": "Encapsulation",
        "message": ""
    },
    {
        "id": "39",
        "name": "Inheritance",
        "message": ""
    },
    {
        "id": "40",
        "name": "Multilevel Inheritance",
        "message": ""
    },
    {
        "id": "41",
        "name": "Multiple Inheritance",
        "message": ""
    },
    {
        "id": "42",
        "name": "Method Overloading",
        "message": ""
    },
    {
        "id": "43",
        "name": "Method Overriding",
        "message": ""
    },
    {
        "id": "44",
        "name": "Polymorphism",
        "message": ""
    },
    {
        "id": "45",
        "name": "Friend Function",
        "message": ""
    },
    {
        "id": "46",
        "name": "Virtual Function",
        "message": ""
    },
    {
        "id": "47",
        "name": "Virtual Destructor",
        "message": ""
    }
]

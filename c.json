[
    {
      "id": 1,
      "name": "What is C ?",
      "message":"C ek programming language hai jo \"Dennis Ritchie\" ne 1972 mein \"Bell Labs\" mein create kiya tha. C programming language \"Unix\" operating system ke development mein istemal kiya gaya tha. C ek high-level aur procedural programming language hai jisme code machine-level ke commands ke through translate kiya jata hai.\n\nC programming language mein, code \"C compiler\" ke through \"machine code\" mein translate kiya jata hai. Isse, C programming language ke programs very fast aur efficient chalte hai.\n\nC programming language mein, variable, functions, loops, conditionals aur arrays ke through programming kiya jata hai. C programming language mein, memory ko direct access karne ke liye bhi allow kiya jata hai.\n\n",
      "example":"0",
      "remcont":"C programming language ek standard programming language hai jo \"ANSI C\" aur \"ISO C\" ke through standardize kiya gaya hai. Isliye, C programming language ko bahut saare platforms par support karna possible hai.\n\nC programming language mein, bahut saare popular libraries aur frameworks hai jo bahut saare areas mein use kiye jate hai, jaise game development, embedded systems, device drivers, etc.\n\n"
    },
    {
        "id": 2,
        "name": "How To Install C",
        "message":"~For Windows:\n\n~1: Download \"Cygwin\" or \"MinGW\" software from their official websites.\n\n~2: Install the software by following the installation wizard.\n\n~3: Open the software and type \"gcc\" in the terminal to check if C compiler is installed properly.\n\n~4: Write your C code in a text editor and save it with a \".c\" extension.\n\n~5: Compile your C code using the \"gcc\" compiler in the terminal.\n\n~6: Run your compiled C code using the \"./a.out\" command in the terminal.\n\n",
      "example":"0",
      "remcont":"0"
    },
    {
        "id":"3",
        "name":"Syntax in C programming",
        "message":"Yahan ek basic C program ka example diya gaya hai jismein printf function ka use kiya gaya hai:\n",
      "example":"#include <stdio.h>\n\nint main() {\n    printf(\"Abhivishrut, is here!\\n\");\n    return 0;\n}",
      "remcont":"Is example mein, #include preprocessor directive ka use kiya gaya hai jismein stdio.h library ko include kara gaya hai. main function ke body mein, printf function ka use kiya gaya hai jisme \"Abhivishrut, is here!\" print kiya gaya hai.\n\n"
    },
    {
        "id": 4,
        "name": "Variables in C",
        "message":"In C programming, variables ek storage location hain jo data ko store karta hai. Variables ke liye, pehle data type specify karna necessary hai, phir variable name specify karna hai. Jaise ki, 'int a;' aur 'float b;' ke saath, 'a' variable ko integer data type mein aur 'b' variable ko float data type mein declare kiya gaya hai.\n\nVariables ke saath, kuch rules follow karna necessary hai:\n\n~1: Variable name ka shuruat alphabet ya underscore ke saath hona chahiye.\n\n~2: Variable name mein, number, alphabet, aur underscore ke alawa koi bhi character nahi shamil ho sakta.\n\n~3: Variable name mein, same name ka do bar use nahi kiya jata.\n\n~4: Variable name mein, keyword use nahi kiya jata.\n\n~5: Variable name mein, case sensitive hota hai.\n\n~6: Variable ko initialize karne ke liye, initialize keyword ka use kiya jata hai, jaise ki 'int a = 10;'.\n\nYahan ek basic C program ka example diya gaya hai jismein int aur float data type ke variables ka use kiya gaya hai:\n",
      "example":"#include <stdio.h>\n\nint main() {\n    int a = 10;\n    float b = 20.5;\n\n    printf(\"Value of a is: %d\\n\", a);\n    printf(\"Value of b is: %f\\n\", b);\n\n    return 0;\n}",
      "remcont":"Is example mein, 'int' aur 'float' data type ke variables 'a' aur 'b' ko define kiya gaya hai aur initialize kiya gaya hai '10' aur '20.5' values ke saath. Aur, 'printf' function ka use kiya gaya hai jismein variable ke values print kiye gaye hain."
    },
    {
        "id": 5,
        "name": "Constant Variables",
        "message":"Constant Variables kehte hain jinmein value change nahi kar sakte. Constant Variables ko declare karne ke liye, const keyword ka use kiya jata hai.\n",
      "example":"const int MAX_SIZE = 100;",
      "remcont":"Is example mein, MAX_SIZE variable ko const keyword se declare kiya gaya hai, isliye value change nahi kar sakta.\n\n"
    },
    {
        "id": 6,
        "name": "C Input Output",
        "message":"In C programming, input aur output functions ke through data input aur output karne ka tarika bataya gaya hai. Yahan kuchh mahatvapurn input aur output functions diye gaye hain:\n\n~'scanf': scanf function ka use karke, user input ko program mein store kar sakte hain.\n\n~'printf': printf function ka use karke, program se data print kar sakte hain.",
      "example":"#include <stdio.h>\n\nint main() {\n    int a;\n\n    printf(\"Enter a value: \");\n    scanf(\"%d\", &a);\n\n    printf(\"Value of a is: %d\\n\", a);\n\n    return 0;\n}",
      "remcont":""
    },
    {
        "id": 7,
        "name": "C Data Types",
        "message":"Data Types in C programming mein, variables ke liye memory allocation ke liye use hoti hain. Yahan kuchh mahatvapurn C programming mein use hoti hain data types:\n\n~1. Integer (int): Integers ko store karne ke liye use hota hai int data type. Integers 32-bit signed integers hoti hain.\n\n~2. Float (float): Float values ko store karne ke liye use hota hai float data type. Float values 32-bit single precision floating point numbers hoti hain.\n\n~3. Double (double): Double values ko store karne ke liye use hota hai double data type. Double values 64-bit double precision floating point numbers hoti hain.\n\n~4. Character (char): Characters ko store karne ke liye use hota hai char data type. Characters 8-bit signed integers hoti hain.\n\n~5. Boolean (bool): Boolean values ko store karne ke liye use hota hai bool data type. Boolean values 1-bit values hoti hain, jo either true ya false ho sakti hain.\n\n~6. Void (void): Void data type, return type ke liye use hota hai, jo koi value nahi return karta.\n\n\nYahan ek basic example diya gaya hai jismein C programming mein use hoti hain data types.",
        "example":"#include <stdio.h>\n#include <stdbool.h>\n\nint main() {\n    int a = 10;\n    float b = 20.5;\n    char c = 'A';\n    bool d = true;\n\n    printf(\"Value of a is: %d\\n\", a);\n    printf(\"Value of b is: %f\\n\", b);\n    printf(\"Value of c is: %c\\n\", c);\n    printf(\"Value of d is: %d\\n\", d);\n\n    return 0;\n}",
        "remcont":"Is example mein, 'int', 'float', 'char', aur 'bool' data types ke through variables banaye gaye hain aur values assign kiye gaye hain. Aur, 'printf' function ka use kiya gaya hai jismein variables ke values print kiye gaye hain.\n\n"
    },
    {
        "id": 8,
        "name": "C Operators",
        "message":"",
      "example":"",
      "remcont":""
    },
    {
        "id": 9,
        "name": "String in C",
        "message":"",
      "example":"",
      "remcont":""
    },
    {
        "id": 10,
        "name": "if else in C",
        "message":"",
        "example":"",
        "remcont":""
    },
    {
        "id": 11,
        "name": "while Loop in C",
        "message":"",
      "example":"",
      "remcont":""
    },
    {
        "id": 12,
        "name": "do while Loop in C",
        "message":"",
      "example":"",
      "remcont":""
    },
    {
        "id": 13,
        "name": "for Loop",
        "message":"",
      "example":"",
      "remcont":""
    },
    {
        "id": 14,
        "name": "Continue statement",
        "message":"",
      "example":"",
      "remcont":""
    },
    {
        "id": 15,
        "name": "break statement",
        "message":"",
      "example":"",
      "remcont":""
    },
    {
        "id": 16,
        "name": "switch statement",
        "message":"",
      "example":"",
      "remcont":""
    },
    {
        "id": 17,
        "name": "goto Statement",
        "message":"",
      "example":"",
      "remcont":""
    },
    {
        "id": 18,
        "name": "Array in C",
        "message":"",
      "example":"",
      "remcont":""
    },
    {
        "id": 19,
        "name": "Array Traversing",
        "message":"",
      "example":"",
      "remcont":""
    },
    {
        "id": 20,
        "name": "Multidimensional Array",
        "message":"",
      "example":"",
      "remcont":""
    },
    {
        "id": 21,
        "name": "Function in C",
        "message":"",
      "example":"",
      "remcont":""
    },
    {
        "id": 22,
        "name": "Parameterized Function",
        "message":"",
      "example":"",
      "remcont":""
    },
    {
        "id": 23,
        "name": "Recursive Function",
        "message":"",
      "example":"",
      "remcont":""
    },
    {
        "id": 24,
        "name": "Call By Value And Call By Reference",
        "message":"",
      "example":"",
      "remcont":""
    },
    {
        "id": 25,
        "name": "Structure in C",
        "message":"",
      "example":"",
      "remcont":""
    },
    {
        "id": 26,
        "name": "Pointers in C",
        "message":"",
      "example":"",
      "remcont":""
    }
]
